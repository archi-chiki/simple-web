## ec2 s3 deploy12
name: Deploy to AWS with Smart Workflows
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 1. 소스코드 체크아웃
        uses: actions/checkout@v2

      - name: 2. AWS-CLI Credential 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: 3. 아티팩트 만들기
        run: |
          pwd
          zip -r deploy.zip ./*

      - name: 4. 생성된 아티팩트 S3에 업로드
        run: |
          aws s3 cp deploy.zip s3://${{ secrets.S3_BUCKET }}/deploy.zip

      - name: 5. 현재 진행중인 Deploy ID 가져오기 및 중단
        run: |
          # 현재 AWS Deploy에서 진행중인 배포 작업의 ID를 Text로 리턴받음
          DEPLOYMENTS=$(aws deploy list-deployments \
            --application-name simple-web-content \
            --deployment-group-name simple-web-deploy-group \
            --include-only-statuses "InProgress" \
            --query 'deployments[]' \
            --output text)
          
          if [ ! -z "$DEPLOYMENTS" ]; then
            for deployment in $DEPLOYMENTS; do
              echo "Stopping deployment $deployment"
              aws deploy stop-deployment --deployment-id $deployment
            done
            # 잠시 대기하여 취소가 완료되도록 함
            sleep 10
          fi

      - name: 6. AWS Deploy를 통한 배포 진행
        id: deploy # 배포 진행과정을 확인하기 Step ID 선언
        run: |
          DEPLOYMENT_ID=$(aws deploy create-deployment \
            --application-name simple-web-content \
            --deployment-group-name simple-web-deploy-group \
            --s3-location bucket=${{ secrets.S3_BUCKET }},key=deploy.zip,bundleType=zip \
            --output text \
            --query 'deploymentId')
          #echo "::set-output name=deployment_id::$DEPLOYMENT_ID"
          #echo "{name}=deployment_id" >> $GITHUB_OUTPUT
          echo "deployment_id=${DEPLOYMENT_ID}" >> $GITHUB_OUTPUT

      - name: 7. Deploy 완료까지 대기
        run: |
          # 6번 과정에서 생성한 Deploy ID를 사용하여 'deployment-successful' 인스트럭션을 통해 성공여부를 확인하는 것
          aws deploy wait deployment-successful --deployment-id ${{ steps.deploy.outputs.deployment_id }}
